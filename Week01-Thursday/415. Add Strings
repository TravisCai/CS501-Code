Given two non-negative integers num1 and num2 represented as string, return the sum of num1 and num2.

Note:

The length of both num1 and num2 is < 5100.
Both num1 and num2 contains only digits 0-9.
Both num1 and num2 does not contain any leading zero.
You must not use any built-in BigInteger library or convert the inputs to integer directly.

public class Solution {
    public String addStrings(String num1, String num2) {
        if(num1 == null || num1.length() == 0){
            return num2;
        }
        
        if(num2 == null || num2.length() == 0){
            return num1;
        }
        
        StringBuilder sb =new StringBuilder();
        int index1 = num1.length() - 1;
        int index2 = num2.length() - 1;
        int carry = 0;
        
        while(index1 >= 0 || index2 >= 0){
            int x = index1 < 0 ? 0:num1.charAt(index1) - '0';
            int y = index2 < 0 ? 0:num2.charAt(index2) - '0';
            carry = (x + y + carry) / 10;
            
            index1--;
            index2--;
        }
        
        if(carry == 1){
            sb.append('1');
        }
        
        return sb.reverse().toString();
        
        
    }
}
